// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GloboChallenge.VcomCalc.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("VComCalc")]
    [NUnit.Framework.CategoryAttribute("Chrome")]
    public partial class VComCalcFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VComCalc.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "VComCalc", null, ProgrammingLanguage.CSharp, new string[] {
                        "Chrome"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 - Acessar o VcomCalc")]
        [NUnit.Framework.TestCaseAttribute("\"1.00.201223.01\"", null)]
        public virtual void _01_AcessarOVcomCalc(string versao, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 - Acessar o VcomCalc", null, exampleTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("que eu acesso o VComCalc Sistemas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
 testRunner.Then(string.Format("é apresentada as versões dos sistemas {0}", versao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 - Emissão de boleto à vista (com impressão)")]
        [NUnit.Framework.TestCaseAttribute("\"07/12/2020\"", null)]
        public virtual void _02_EmissaoDeBoletoAVistaComImpressao(string data, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 - Emissão de boleto à vista (com impressão)", null, exampleTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
 testRunner.And(string.Format("realizo uma negociação a vista {0}", data), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.Then("e apresentado com sucesso o boleto para impressao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 - Emissão de boleto parcelado (com impressão)")]
        [NUnit.Framework.TestCaseAttribute("\"07/12/2020\"", null)]
        public virtual void _03_EmissaoDeBoletoParceladoComImpressao(string data, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 - Emissão de boleto parcelado (com impressão)", null, exampleTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.And(string.Format("realizo uma negociação parcelado {0}", data), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 27
 testRunner.Then("e apresentado com sucesso o boleto para impressao", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04 - Envio de boleto por e-mail")]
        [NUnit.Framework.TestCaseAttribute("\"07/12/2020\"", null)]
        public virtual void _04_EnvioDeBoletoPorE_Mail(string data, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 - Envio de boleto por e-mail", null, exampleTags);
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 34
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 35
 testRunner.And(string.Format("realizo uma negociação a vista {0}", data), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 36
 testRunner.Then("e apresentado com sucesso o boleto para email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05 - Envio de boleto por SMS")]
        [NUnit.Framework.TestCaseAttribute("\"07/12/2020\"", null)]
        public virtual void _05_EnvioDeBoletoPorSMS(string data, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 - Envio de boleto por SMS", null, exampleTags);
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 44
 testRunner.And(string.Format("realizo uma negociação a vista {0}", data), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 45
 testRunner.Then("e apresentado com sucesso o boleto para o sms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06 - Listar últimas negociações")]
        public virtual void _06_ListarUltimasNegociacoes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 - Listar últimas negociações", null, ((string[])(null)));
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 52
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 53
 testRunner.And("clico em detalhes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 54
 testRunner.Then("visualiso as ultimas negociaçoes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07 - Reimpressão de boleto")]
        public virtual void _07_ReimpressaoDeBoleto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07 - Reimpressão de boleto", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
    testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 58
 testRunner.And("seleciono a opção de reimprimir", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 59
 testRunner.Then("visualizo a reimpressão com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08 - Cancelamento de boleto")]
        public virtual void _08_CancelamentoDeBoleto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 - Cancelamento de boleto", null, ((string[])(null)));
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 63
 testRunner.And("seleciono a opção de cancelar boletos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 64
 testRunner.Then("o boleto é cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09 - Gravação de cálculo")]
        public virtual void _09_GravacaoDeCalculo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 - Gravação de cálculo", null, ((string[])(null)));
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 67
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 68
 testRunner.And("seleciono a opção de gravar negociação", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 69
 testRunner.Then("é gravado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10 - Emissão de boleto de cálculo gravado")]
        public virtual void _10_EmissaoDeBoletoDeCalculoGravado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 - Emissão de boleto de cálculo gravado", null, ((string[])(null)));
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 72
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 73
 testRunner.And("seleciono a opção de emitir boleto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 74
 testRunner.Then("visualizo a reimpressão com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11 - Abertura de cálculo gravado")]
        public virtual void _11_AberturaDeCalculoGravado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11 - Abertura de cálculo gravado", null, ((string[])(null)));
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 78
 testRunner.And("seleciono abrir calculo gravado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 79
 testRunner.Then("visualizo a negociação em aberto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12 - Cancelamento de cálculo gravado")]
        public virtual void _12_CancelamentoDeCalculoGravado()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12 - Cancelamento de cálculo gravado", null, ((string[])(null)));
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 82
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 83
 testRunner.And("seleciono cancelamento de cálculo gravado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 84
 testRunner.Then("visualizo o cancelamento com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13 - Recebimento")]
        public virtual void _13_Recebimento()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13 - Recebimento", null, ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
 testRunner.Given("que eu acesso o VcomCalc com cliente negociavel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 88
 testRunner.And("seleciono a opção de recebimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 89
 testRunner.Then("e confirmado o recebimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
